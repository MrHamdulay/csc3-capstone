"""Assignment 8 Q4Nandani BirjanundMay 2014"""import mathimport syssys.setrecursionlimit (30000) #allows larger numbers to be sorteddef Pal(start,test): #takes in the variables start and test as parameters    if(len(str(start))!=1): #if the number not equal to only one digit        d=start%10 #gives the last number         test=test+str(d) #adds the last number to the test        return Pal((start-(start%10))//10,test) #calls the function again if the number - the last digit    else:        return(test+str(start))def Prime(n,x,p):    if(n==1):        return (p+"Not")    sq=int(math.sqrt(n)) #gets the squareroot of function    if(x!=(sq+1)): # if its not the squareroot        if(n%x!=0): #if its divisible            return Prime(n,x+1,p) #calls the function again        else:            return (p+"Not") #returns as not a primedef working(n,m):     if n<=m:       #while p is not equal to p        tespPal=int(Pal(n,"")) # calls the Pal function        if tespPal==n: #if the number reversed is equal to the number x=x             testPrime=Prime(n,2,"") #calls the Prime function            if testPrime!="Not":                print(n) #prints the number n        working(n+1,m) #calls the working of the next number                if __name__== "__main__":    n=eval(input("Enter the starting point N:\n"))    m=eval(input("Enter the ending point M:\n"))    print("The palindromic primes are:")    working(n,m)   