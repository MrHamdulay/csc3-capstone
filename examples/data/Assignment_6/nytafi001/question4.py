""" A program that takes in a list of marks (separated by spaces) and outputs a histogram representation of the marks according to the mark categories at UCT.
Author: Afika Nyati
Date: 22nd April 2014"""

def main():
    marks_count = enter_marks() # Assigns the list generated by the enter_marks function to marks_count variable
    print_marks(marks_count) # Prints the marks received as a bar graph.
    

def enter_marks():
    
    marks_count = [0,0,0,0,0] # Initializes the marks received in each mark category to zero.
    
    list_marks = str.split(input("Enter a space-separated list of marks:\n")) # Assigns a string split into a list of the marks received by the user.
    
    for entry in list_marks: # A definite loop that goes through each mark in the list_marks list and categorizes according the mark category it represents.
        
        entry = int(entry) # This changes the each string entry into an integer, so that operations ca be done to/with it.
        
        if (entry >= 75) : # If the entry is equal to or above 75%, the  count for the value in the list representing a 1st pass is increased by 1.
            marks_count[0] += 1
        
        elif (70 <= entry < 75): # If the entry is greater than or equal to 70% and less than 75%, the  count for the value in the list representing an Upper 2nd pass is increased by 1.
            marks_count[1] += 1
         
        elif (60 <= entry < 70): # If the entry is greater than or equal to 60% and less than 70%, the  count for the value in the list representing an Lower 2nd pass is increased by 1.
            marks_count[2] += 1 
        
        elif (50 <= entry < 60): # If the entry is greater than or equal to 50% and less than 60%, the  count for the value in the list representing a 3rd pass is increased by 1.
            marks_count[3] += 1 
        
        else: # If the entry is less than 50%, the  count for the value in the list representing a fail is increased by 1.
            marks_count[4] += 1
        
        
    return marks_count # Returns a list of the counts of each mark category.


def print_marks(lst):
    
    
    print("1 |", "X" * lst[0], sep = "") # Prints a bar representing the amount of 1st category passes.
    print("2+|", "X" * lst[1], sep = "") # Prints a bar representing the amount of Upper 2nd category passes.
    print("2-|", "X" * lst[2], sep = "") # Prints a bar representing the amount of Lower 2nd category passes.
    print("3 |", "X" * lst[3], sep = "") # Prints a bar representing the amount of 3rd category passes.
    print("F |", "X" * lst[4], sep = "") # Prints a bar representing the amount of fails.
        
main()